name: UAT-Deploy to AWS S3 on and Invalidate CloudFront

on:
  pull_request:
    branches:
      - anotherTest
    types:
      - closed

  issue_comment:
    types: [created]

jobs:
  deploy:
    if: >
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/deploy'))
    runs-on: ubuntu-latest

    env:
      # get aws secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

      # get react secrets
      #REACT_APP_GOOGLE_MAPS_KEY: ${{ secrets.REACT_APP_GOOGLE_MAPS_KEY }}
      #REACT_APP_FCM_VAPID: ${{ secrets.REACT_APP_FCM_VAPID }}
      #REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}


      # get from env
      S3_BUCKET_NAME: ${{ vars.UAT_TEST_S3_BUCKET_NAME }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.UAT_TEST_CLOUDFRONT_DISTRIBUTION_ID }}

      # static env
      REACT_APP_BASE_URL_V1: "https://api-uat.rupyz.com/v1"
      REACT_APP_BASE_URL_V2: "https://api-uat.rupyz.com/v2"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.18.1"

      - name: Install npm dependencies
        run: npm install --force

      - name: Make a Build for React
        env:
          CI: false
        run: npm run build

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Deploy build to S3
        run: aws s3 sync build/ s3://$S3_BUCKET_NAME --delete --acl public-read

      - name: Invalidate CloudFront distribution
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'success,failure,warning'
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} <{commit_url}|${{github.event.pull_request.title}}> deployed on uat-test-sales.rupyz.com'
          mention_users: 'U04F55SKGPL,U05RBHZGMQX'
          mention_users_when: 'failure,warnings'
          footer: 'Linked to Repo <{repo_url}|{repo}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
